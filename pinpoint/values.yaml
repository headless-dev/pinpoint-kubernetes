# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# The base hadoop image to use for all components.
# See this repo for image build details: https://github.com/Comcast/kube-yarn/tree/master/image

global:
  batchEnabled: false
  webhookEnabled: false

pinpoint-zookeeper:
  profiles: release
  serviceType: ClusterIP

  replicas: 3
  affinity: {}

  image:
    repository: registry.k8s.io/kubernetes-zookeeper
    tag: 1.0-3.4.10
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"

  persistence:
    enabled: true
    size: 2Gi


pinpoint-hbase:
  profiles: release
  serviceType: NodePort

  affinity: {}

  image:
    repository: pinpointdocker/pinpoint-hbase
    tag: 2.5.2
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "4Gi"
      cpu: "1"
  zookeeper:
    host:

  persistence:
    enabled: true
    size: 10Gi

pinpoint-collector:
  image:
    repository: pinpointdocker/pinpoint-collector
    tag:
    pullPolicy: IfNotPresent
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
  receiver:
    grpc:
      agentPort: 9991
      statPort: 9992
      spanPort: 9993
    thrift:
      basePort: 9994
      statPort: 9995
      spanPort: 9996
  loggingLevelRoot: INFO
  clusterEnable: true
  zookeeper:
    # headless service: pinpoint-zookeeper-headless
    host: pinpoint-zookeeper
  flink:
    enabled: true

pinpoint-web:
  image:
    repository: pinpointdocker/pinpoint-web
    tag: 2.5.2
    pullPolicy: IfNotPresent
  serverPort: 8080
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
  clusterEnable: true

  adminPassword: admin
  sendUsage: false
  loggingLevelRoot: INFO
  showApplicationStat: true
  mysql:
    serviceName:
    host:
    port: 3306
    user: admin
    password: admin
    database: pinpoint
  zookeeper:
    # headless service: pinpoint-zookeeper-headless
    host: pinpoint-zookeeper

pinpoint-mysql:
  image:
    repository: pinpointdocker/pinpoint-mysql
    tag: 2.5.2
    pullPolicy: IfNotPresent

  rootPassword: root123
  user: admin
  password: admin
  database: pinpoint
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
  affinity: {}
  persistence:
    enabled: false
    size: 2Gi


pinpoint-batch:
  image:
    repository: pinpointdocker/pinpoint-batch
    tag: 2.5.2
    pullPolicy: IfNotPresent
  serverPort: 8079
  affinity: { }
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
  showApplicationStat: true
  sendUsage: true
  profiles: release
  loggingLevelRoot: INFO
  clusterEnable: false
  adminPassword: admin
  mysql:
    serviceName:
    host:
    port: 3306
    user: admin
    password: admin
    database: pinpoint
  zookeeper:
    # headless service: pinpoint-zookeeper-headless
    host: pinpoint-zookeeper
  flink:
    host: pinpoint-flink
  mail:
    server:
      url: smtp.gmail.com
      port: 587
      username: username
      password: password
    sender: pinpoint_operator@pinpoint.com
    transportProtocol: smtp
    debug: false
    smtp:
      port: 25
      auth: false
      startTls:
        enable: false
        required: false

pinpoint-flink:
  image:
    repository: pinpointdocker/pinpoint-flink
    tag: 2.5.2
    pullPolicy: IfNotPresent
  serverPort: 8081
  affinity: { }
  resources:
    requests:
      memory: "512Mi"
      cpu: "256m"

  zookeeper:
    # headless service: pinpoint-zookeeper-headless
    host: pinpoint-zookeeper

pinpoint-receiver:
  image:
    repository: kaaskjh/pinpoint-receiver
    tag: 1.0.0
    pullPolicy: IfNotPresent
  # add webhook url from receiver service name, ex) pinpoint-receiver/api/slack, https://pinpoint-apm.gitbook.io/pinpoint/documents/alarm#alarm
  slack:
    token: "xoxb-xxxxxxxxx"
    channelId: "test"
    attachment:
      title: Pinpoint alarm
      color: "#ff0000"
      titleLink: http://localhost:8080
      # Variable list [pinpointUrl, batchEnv, applicationId, serviceType, userGroupId, userGroupMembers, unit, threshold, notes, sequenceCount, name, value]
      value: "$applicationId, $name, $value"
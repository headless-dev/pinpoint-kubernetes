apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "server.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "server.name" . }}
    app.kubernetes.io/component: pinpoint-server
    {{- include "server.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "server.name" . }}
      app.kubernetes.io/component: pinpoint-server
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ include "server.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "server.name" . }}
        app.kubernetes.io/component: pinpoint-server
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
{{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
      volumes:
        - name: hbase-config
          configMap:
            name: {{ include "server.fullname" . }}
            items:
              - key: hbase-site.xml
                path: hbase-site.xml
      containers:
        - name: pinpoint-hbase
          image: "{{ .Values.hbase.image.repository }}:{{ .Values.hbase.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.hbase.image.pullPolicy | quote }}
          resources:
{{ toYaml .Values.hbase.resources | indent 12 }}
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 16010
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 16010
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: hbase-config
              mountPath: /opt/hbase/hbase-1.2.6/conf/hbase-site.xml
              subPath: hbase-site.xml
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /home/pinpoint/hbase
            - name: data
              mountPath: /home/pinpoint/zookeeper
            {{- end }}

        - name: pinpoint-collector
          image: "{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
          resources:
{{ toYaml .Values.collector.resources | indent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "server.fullname" .}}
          ports:
            - containerPort: 9991
              name: grpc-agent
            - containerPort: 9992
              name: grpc-stat
            - containerPort: 9993
              name: grpc-span
            - containerPort: 9994
              name: thrift-base
            - containerPort: 9995
              name: thrift-stat
              protocol: UDP
            - containerPort: 9996
              name: thrift-span
              protocol: UDP
          livenessProbe:
            failureThreshold: 10
            tcpSocket:
              port: 9991
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 10
            tcpSocket:
              port: 9991
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

        - name: pinpoint-web
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          resources:
{{- toYaml .Values.web.resources | nindent 12 }}
          ports:
            - name: ui
              containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ template "server.fullname" . }}
            - secretRef:
                name: {{ template "server.fullname" . }}
          livenessProbe:
            failureThreshold: 10
            tcpSocket:
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 10
            tcpSocket:
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

        - name: pinpoint-zookeeper
          imagePullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
          image: "{{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag }}"
          resources:
{{ toYaml .Values.zookeeper.resources | indent 12 }}
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
          command:
            - sh
            - -c
            - "start-zookeeper \
                    --servers=1 \
                    --data_dir=/var/lib/zookeeper/data \
                    --data_log_dir=/var/lib/zookeeper/data/log \
                    --conf_dir=/opt/zookeeper/conf \
                    --client_port=2181 \
                    --election_port=3888 \
                    --server_port=2888 \
                    --tick_time=2000 \
                    --init_limit=10 \
                    --sync_limit=5 \
                    --heap=512M \
                    --max_client_cnxns=60 \
                    --snap_retain_count=3 \
                    --purge_interval=12 \
                    --max_session_timeout=40000 \
                    --min_session_timeout=4000 \
                    --log_level=INFO"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "zookeeper-ready 2181"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "zookeeper-ready 2181"
            initialDelaySeconds: 10
            timeoutSeconds: 5
              {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper
              {{- end }}
        - name: pinpoint-mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "server.fullname" .}}
          livenessProbe:
            failureThreshold: 5
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
{{- toYaml .Values.mysql.resources | nindent 12 }}

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        volumeMode: Filesystem
  {{- end }}
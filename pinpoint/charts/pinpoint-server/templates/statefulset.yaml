apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "server.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "server.name" . }}
    app.kubernetes.io/component: master
    {{- include "server.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "server.name" . }}
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ include "server.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "server.name" . }}
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
{{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
      volumes:
        - name: hbase-config
          configMap:
            name: {{ include "server.name" . }}
            items:
              - key: hbase-site.xml
                path: hbase-site.xml
      containers:
        - name: pinpoint-hbase
          image: "{{ .Values.hbase.image.repository }}:{{ .Values.hbase.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.hbase.image.pullPolicy | quote }}
          resources:
  {{ toYaml .Values.hbase.resources | indent 10 }}
          readinessProbe:
            httpGet:
              path: /
              port: 16010
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 16010
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: hbase-config
              mountPath: /opt/hbase/hbase-1.2.6/conf/hbase-site.xml
              subPath: hbase-site.xml
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /home/pinpoint/hbase
            - name: data
              mountPath: /home/pinpoint/zookeeper
            {{- end }}

        - name: pinpoint-collector
          image: "{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
          resources:
  {{- toYaml .Values.collector.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "collector.fullname" .}}
          ports:
            - containerPort: 9991
              name: grpc-agent
            - containerPort: 9992
              name: grpc-stat
            - containerPort: 9993
              name: grpc-span
            - containerPort: 9994
              name: thrift-base
            - containerPort: 9995
              name: thrift-stat
              protocol: UDP
            - containerPort: 9996
              name: thrift-span
              protocol: UDP
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 9991
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 9991
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2

        - name: pinpoint-zookeeper
          imagePullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
          image: "{{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag }}"
          resources:
    {{ toYaml .Values.zookeeper.resources | indent 10 }}
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        volumeMode: Filesystem
  {{- end }}